#!/bin/sh
set -e
echo  "Configure edo365board ..."
#. /usr/share/debconf/confmodule

# read parameter
pread() {
    if test -z "$2" ; then echo "Enter $1: "; read RET;
    elif test "$2" = "passwd" ; then echo "Enter $1: "; stty -echo; read RET; stty echo;
    else echo "Enter $1 (default: $2): "; read RET; test -z "$RET" && RET=$2;
    fi
}
# error
die() { echo "ERROR: $1" ; exitr 1; }

if test -e "/etc/edo365board.conf"; then 
    while read -r SERVERNAME USER; 
        do C_EXIST=true; 
    done < "/etc/edo365board.conf"
else 
    #db_input critical deb/servername || true
    #db_input critical deb/user || true
    #db_go || true
    #db_get deb/servername
    pread "server name" "edo365board"
    SERVERNAME="$RET"
    #db_get deb/user
    pread "username" "board_user"
    USER="$RET"

    i=0;
    while test "$i" -lt "5"; do
        #db_reset deb/password
        #db_reset deb/confirm
        #db_input critical deb/password || true
        #db_go || true
        #db_get deb/password
        pread "password" passwd
        PASSWD="$RET"
        #db_input critical deb/confirm || true
        #db_go || true
        #db_get deb/confirm
        pread "confirm password" passwd
        PASSWD2="$RET"
        if test "$PASSWD" = "$PASSWD2"; then
            break;
        fi
        #db_input critical deb/passerror || true
        #db_go || true
        echo "Does not match, retry ($i).";
        i=$(expr "$i" + "1");
        #db_reset deb/password
        #db_reset deb/confirm
    done;
    test "$i" -eq "5" && exit 1;
fi

################################################################################
# ssl certificate
if test ! -e "/etc/ssl/$SERVERNAME/$SERVERNAME.cert.pem"; then
    sslcert --root root --cert $SERVERNAME --path /etc/ssl
fi

################################################################################
# samba
systemctl stop smbd.service
mv /etc/samba/smb.conf /etc/samba/smb.conf.orig || echo "no file backup"
DEVICES=$(ls /sys/class/net)
cat > /etc/samba/smb.conf <<EOF
[global]
        server string = $SERVERNAME
        server role = standalone server
        interfaces = $DEVICES
        bind interfaces only = yes
        disable netbios = yes
        smb ports = 445
        log file = /var/log/samba/smb.log
        max log size = 10000

[$USER]
        path = /samba/$USER
        browseable = no
        read only = no
        force create mode = 0660
        force directory mode = 2770
        valid users = $USER
EOF


mkdir -p /samba/$USER/public 
mkdir -p /samba/$USER/style
chown :sambashare /samba/; 
useradd --home /samba/$USER  --shell /usr/sbin/nologin --user-group  --groups sambashare $USER  || true; 
echo $USER:$PASSWD | chpasswd; 
chown -R $USER:sambashare /samba/$USER; 
chmod -R 2755 /samba/$USER/
smbpasswd -a $USER;
smbpasswd -e $USER;

systemctl start smbd.service
# update firewall
ufw allow Samba
ufw disable
ufw enable

################################################################################
# nginx
httpsite new $SERVERNAME --private /etc/ssl/$SERVERNAME/$SERVERNAME --user $USER --add-ip
# link folders to samba
test -L /var/www/$SERVERNAME/public || ln -s /samba/$USER/public /var/www/$SERVERNAME/public
test -L /var/www/$SERVERNAME/style  || ln -s /samba/$USER/style /var/www/$SERVERNAME/style
# install basic files
test -e /var/www/$SERVERNAME/index.html || cp -r /usr/local/edo365board/index.html /var/www/$SERVERNAME/
test -e /var/www/$SERVERNAME/edo365board.js || cp -r /usr/local/edo365board/edo365board.js /var/www/$SERVERNAME/

test -e /var/www/$SERVERNAME/style/style.css || cp -r /usr/local/edo365board/style.css /var/www/$SERVERNAME/style/
test -e /var/www/$SERVERNAME/style/script.js || cp -r /usr/local/edo365board/script.js /var/www/$SERVERNAME/style/
sudo chown -R $USER:$USER /var/www/$SERVERNAME
chmod -R 755 /var/www
systemctl restart nginx

################################################################################
# install service
update-rc.d edo365board defaults
echo "$SERVERNAME $USER"> "/etc/edo365board.conf"
