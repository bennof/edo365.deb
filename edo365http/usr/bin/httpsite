#!/bin/sh
# written by Benno Falkner

set -ex

help(){
    cat <<EOF
Help HTTPSITE - Create new http host folder for nginx
usage: httpsite <mode> <args>
modes:
    new <name> <args>   create a new host with name 
    -p|--private <cert>       use a private certificate or create a new one with name             
    -n|--no-cert              use no certificate (http only)   
    -w|--www                  create www subdomain too
    lenc <name> [www.name]    add lets encrypt to name
    help                print this help
EOF
}

# error 
die () { echo "ERROR: $1" ; exit 1; }

# new site
new() {
    test -z "$1" && die "no name given";
    echo "create new site: $1";
    NAME=$1; shift;
    LOCATION="/var/www/";
    SITEPATH="${LOCATION}${NAME}";
    WWW="";

    while [ "$1" != "" ]; do
    case "$1" in
        -p|--private) CERT=="$2";shift;shift;;
        -n|--no-vert) NOCERT=true; shift;;
        -w|--www) WWW="www.$NAME";shift;;
        -u|--user)USER="$2";shift;shift;;
        -a|--add-ip)$IP="$(hostname -I)";shift;shift;;
        -l|--location) LOCATION="$2";SITEPATH="${LOCATION}${NAME}"; shift;shift;;
        *) shift;;  #file
    esac
    done

    # prepare folder
    test -d "$SITEPATH" && die "folder already exists";
    sudo mkdir -p "$SITEPATH";
    indexpage "$NAME" "$SITEPATH" "$USER";
    sudo chown -R "$USER:$USER" "$SITEPATH";
    sudo chmod -R 755 "$SITEPATH";
    

    if test -z "$NOCERT" ; then 
        if test -z "$CERT"; then
            sudo addconf "$SITEPATH" "$NAME" "$WWW" "$IP";
            sudo nginx -t
            sudo systemctl restart nginx
            sudo use_letencrypt $NAME $WWW
        else 
            sudo addconfcert "$SITEPATH" "$CERT" "$NAME" "$WWW" "$IP";
            sudo nginx -t
            sudo systemctl restart nginx
        fi
    else 
        sudo addconf "$SITEPATH" "$NAME" "$WWW" "$IP";
        sudo nginx -t
        sudo systemctl restart nginx
    fi 
}

use_letencrypt() {
    NAME=$1;
    WWW=$2;
    if test -z "$WWW"; then 
        sudo certbot --nginx -d $NAME
    else 
        sudo certbot --nginx -d $NAME -d $WWW;
    fi
    if test -z "$(sudo crontab -l | grep  /usr/bin/certbot )"; then 
        echo $(crontab -l ; echo '0 2 * * * /usr/bin/certbot renew --quiet') | crontab - ;  
    else
        echo "cerbot has been added to cron";
    fi
}

indexpage() {
   test -e "$2/index.html" || cat <<EOF > $2/index.html
<!doctype html>

<html lang="en">
<head>
  <meta charset="utf-8">
  <title>$1</title>
  <meta name="description" content="New Index Page">
  <meta name="author" content="$3">
  <!-- <link rel="stylesheet" href="css/styles.css?v=1.0"> -->
</head>
<body>
	<h1>$1</h1>
	<p>A new page ... </p>
</body>
</html>
EOF 
}

addconf () {
    SP=$1; shift;
    NAME=$1; shift;

    cat <<EOF > /etc/nginx/sites-available/$NAME.conf
server {
	listen 80;
	listen [::]:80;

	root $SP;
	index index.html index.htm;

	server_name $@;
	
	location / {
		try_files \$uri \$uri/ =404;
	}
}
EOF
    ln -s /etc/nginx/sites-available/$NAME /etc/nginx/sites-enabled/
}


addconfcert() {
    SP=$1; shift;
    
    if test -e $1.key.pem; then 
        KEY=$1.key.pem
    else
        die "key: $1.key.pem not found"
    fi

    if test -e $1.ca-chain.cert.pem; then 
        CERT=$1.ca-chain.cert.pem
    elif test -e $1.cert.pem; then
        CERT=$1.cert.pem
    else 
        die "certificate: $1.cert.pem not found"
    fi
    shift;
    NAME=$1; shift;

    cat <<EOF > /etc/nginx/sites-available/$NAME.conf
server {
	listen 443 ssl;

	root $SP;
    ssl_certificate     $CERT;
    ssl_certificate_key $KEY;
    ssl_protocols       TLSv1 TLSv1.1 TLSv1.2;

	index index.html index.htm;

	server_name $@;
	
	location / {
		try_files \$uri \$uri/ =404;
	}
}
EOF
    ln -s /etc/nginx/sites-available/$NAME /etc/nginx/sites-enabled/
}


# 
MODE=$1; 

# mode switch
case "$MODE" in
    new) shift; new $@; exit;;
    lenc) shift; use_letencrypt $@; exit;;
    help|-h |--help) help; exit;;
    *) echo "\"deb help\" for help"; exit;;
esac